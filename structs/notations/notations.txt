Go is a light object oriented language, it does not implement inheritance : https://www.ardanlabs.com/blog/2013/07/object-oriented-programming-in-go.html
The following is from : https://github.com/GoesToEleven/GolangTraining :
(1) Encapsulation
state ("fields")
behavior ("methods")
exported / un-exported

(2) Reusability
inheritence ("embedded types")

(3) Polymorphism
interfaces

(4) Overriding
"promotion"

//////////////
Traditional OOP

Classes
-- data structure describing a type of object
-- you can then create "instances"/"objects" from the class/blue-print
-- classes hold both:
==== state / data / fields
==== behavior / methods
-- public / private

Inheritence

//////////////
In Go:
- you don't create classes, you create a type
- you don't instantiate, you create a value of a type

